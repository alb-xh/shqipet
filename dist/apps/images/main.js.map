{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;ACAA,wCAAwC;AACxC,wCAA+C;AAE/C,wCAA2D;AAOpD,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,SAAS;IALrB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,qBAAY,CAAC;QACvB,WAAW,EAAE,CAAC,yBAAgB,CAAC;QAC/B,SAAS,EAAE,CAAC,sBAAa,CAAC;KAC3B,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;ACVtB,sDAAoC;;;;;;;;;;;ACApC,wCAAwC;AACxC,wCAAiF;AAEjF,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC;AAOtF,IAAM,YAAY,GAAlB,MAAM,YAAY;CAAG;AAAf,YAAY;IALxB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAE,qBAAgB,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAG,CAAC,CAAE;QACvE,SAAS,EAAE,CAAC,sBAAa,CAAC;QAC1B,OAAO,EAAE,CAAC,sBAAa,CAAC;KACzB,CAAC;GACW,YAAY,CAAG;AAAf,oCAAY;;;;;;;ACVzB;;;;;;;;;ACAA,0CAAgD;AAAvC,+HAAgB;AACzB,wCAA0C;AAAjC,sHAAa;;;;;;;;;;;;ACDtB,wCAAyE;AACzE,0CAAmC;AAEnC,0CAA0C;AAC1C,sCAA0D;AAGnD,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;IAC3B,YAA6B,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAGtD,WAAW,CAAU,IAAoB;;YAC7C,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAErB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAEpD,OAAO,EAAE,IAAI,EAAE,CAAC;QAClB,CAAC;KAAA;IAGK,QAAQ,CAAW,MAAyB,EAAS,GAAa;;YACtE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;YAExB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAExD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;KAAA;CACF;AAhBO;IADL,iBAAI,GAAE;IACa,oCAAI,GAAE;;iEAAO,oBAAc,oBAAd,oBAAc;;mDAM9C;AAGK;IADL,gBAAG,EAAC,OAAO,CAAC;IACI,qCAAK,GAAE;IAA6B,mCAAG,GAAE;;iEAAzB,uBAAiB,oBAAjB,uBAAiB,oDAAc,kBAAQ,oBAAR,kBAAQ;;gDAMvE;AAnBU,gBAAgB;IAD5B,uBAAU,GAAE;iEAEgC,uBAAa,oBAAb,uBAAa;GAD7C,gBAAgB,CAoB5B;AApBY,4CAAgB;;;;;;;ACP7B;;;;;;;;;;;ACAA,8DAAoC;AACpC,2CAAqC;AACrC,iEAA0B;AAC1B,uCAA4B;AAC5B,wCAA+D;AAC/D,wCAA+C;AAGxC,IAAM,aAAa,GAAnB,MAAM,aAAa;IAIxB,YAAa,aAA4B;QACvC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEK,MAAM,CAAE,IAAY;;YACxB,IAAI;gBACF,MAAM,qBAAM,EAAC,IAAI,CAAC;gBAClB,OAAO,IAAI;aACZ;YAAC,WAAM;gBACN,OAAO,KAAK;aACb;QACH,CAAC;KAAA;IAEO,OAAO,CAAE,IAAY;QAC3B,OAAO,eAAI,EAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEO,eAAe,CAAE,IAAY;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAEO,cAAc,CAAE,GAAW;QACjC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAEO,WAAW,CAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW;YAChC,CAAC,CAAC,WAAW,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YAClC,CAAC,CAAC,yBAAyB,IAAI,EAAE,CAAC;IACtC,CAAC;IAEK,QAAQ,CAAE,GAAW;;YACzB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAEK,UAAU,CAAE,IAAY;;YAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEhC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,IAAI,0BAAiB,EAAE,CAAC;aAC/B;YAED,OAAO,YAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC3D,CAAC;KAAA;IAEK,UAAU,CAAE,IAAY;;YAC5B,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,CAAC;KAAA;IAEK,SAAS,CAAE,GAAW;;YAC1B,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,CAAC;KAAA;IAEK,WAAW,CAAE,MAAkB,EAAE,IAAY;;YACjD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrC,MAAM,WAAW,GAAG,YAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAErF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;qBACrB,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;qBACnB,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,SAAS,CAAE,GAAW,EAAE,IAAa;;YACzC,MAAM,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAE;YACzC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAE1D,OAAO,QAAQ,CAAC;QAClB,CAAC;KAAA;CACF;AA9EY,aAAa;IADzB,uBAAU,GAAE;iEAKiB,sBAAa,oBAAb,sBAAa;GAJ9B,aAAa,CA8EzB;AA9EY,sCAAa;;;;;;;ACR1B;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;ACAA,kDAAkD;AAElD,MAAa,cAAc;CAG1B;AAFC;IAAC,2BAAK,GAAE;;2CACI;AAFd,wCAGC;AAED,MAAa,iBAAiB;CAG7B;AAFC;IAAC,8BAAQ,GAAE;;+CACE;AAFf,8CAGC;;;;;;;ACVD;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,wCAAwD;AACxD,sCAA2C;AAE3C,4CAA6C;AAC7C,wCAA+C;AAE/C,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAEhD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,MAAM,GAAG,QAAQ,CAAC;QAExB,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,sBAAa,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAElD,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/C,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC5B,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,EAAE,CAAC;QAExC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEvB,eAAM,CAAC,GAAG,CAAC,kDAAkD,IAAI,IAAI,MAAM,EAAE,CAAC,CAAC;IACjF,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///../../libs/config/src/index.ts","webpack:///../../libs/config/src/lib/config.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/images/index.ts","webpack:///./src/app/images/controller.ts","webpack:///external commonjs \"express\"","webpack:///./src/app/images/service.ts","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"fs/promises\"","webpack:///external commonjs \"axios\"","webpack:///external node-commonjs \"path\"","webpack:///./src/app/images/dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@shqipet/config';\n\nimport { ImagesController, ImagesService } from './images';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [ImagesController],\n  providers: [ImagesService],\n})\nexport class AppModule {}\n","export * from './lib/config.module';\n","import { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as NestConfigModule } from '@nestjs/config';\n\nconst envFilePath = process.env['NODE' + '_ENV'] === 'production' ? '.prod.env' : '.dev.env';\n\n@Module({\n  imports: [ NestConfigModule.forRoot({ isGlobal: true, envFilePath  }) ],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n","module.exports = require(\"@nestjs/config\");","export { ImagesController } from './controller';\nexport { ImagesService } from './service';","import { Body, Controller, Post, Res, Get, Param } from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ImagesService } from './service';\nimport { CreateImageDto, GetImageParamsDto } from './dto';\n\n@Controller()\nexport class ImagesController {\n  constructor(private readonly imageService: ImagesService) {}\n\n  @Post()\n  async createImage (@Body() body: CreateImageDto) {\n    const { url } = body;\n\n    const name = await this.imageService.saveByUrl(url);\n\n    return { name };\n  }\n\n  @Get(':path')\n  async getImage (@Param() params: GetImageParamsDto, @Res() res: Response) {\n    const { path } = params;\n\n    const stream = await this.imageService.readByPath(path);\n\n    stream.pipe(res);\n  }\n}\n","module.exports = require(\"express\");","import fs, { ReadStream } from 'fs';\nimport { access } from 'fs/promises';\nimport axios from 'axios';\nimport { join } from 'path';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ImagesService {\n  private readonly imagesDir: string;\n  private readonly domain: string;\n\n  constructor (configService: ConfigService) {\n    this.imagesDir = configService.getOrThrow('IMAGES_DIR');\n    this.domain = configService.getOrThrow('DOMAIN');\n  }\n\n  async exists (path: string) {\n    try {\n      await access(path)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  private getPath (name: string): string {\n    return join(this.imagesDir, name);\n  }\n\n  private getNameFromPath (path: string): string {\n    return path.replace(/\\//g, '__');\n  }\n\n  private getNameFromUrl (url: string): string {\n    return this.getNameFromPath(new URL(url).pathname);\n  }\n\n  private getImageUrl (name: string): string {\n    return this.domain !== 'localhost'\n      ? `https://${this.domain}/${name}`\n      : `http://localhost:4000/${name}`;\n  }\n\n  async fetchUrl (url: string): Promise<ReadStream> {\n    const { data } = await axios.get(url, { responseType: 'stream' });\n    return data;\n  }\n\n  async readByName (name: string): Promise<ReadStream> {\n    const path = this.getPath(name);\n\n    const exists = await this.exists(path);\n    if (!exists) {\n      throw new NotFoundException();\n    }\n\n    return fs.createReadStream(path, { encoding: 'binary' });\n  }\n\n  async readByPath (path: string): Promise<ReadStream> {\n    return await this.readByName(this.getNameFromPath(path));\n  }\n\n  async readByUrl (url: string): Promise<ReadStream> {\n    return await this.readByName(this.getNameFromUrl(url));\n  }\n\n  async saveBySteam (stream: ReadStream, name: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const writeStream = fs.createWriteStream(this.getPath(name), { encoding: 'binary' });\n\n      stream.pipe(writeStream)\n        .on('error', reject)\n        .on('finish', () => resolve(this.getImageUrl(name)));\n    });\n  }\n\n  async saveByUrl (url: string, name?: string): Promise<string> {\n    const filename = name || this.getNameFromUrl(url);\n\n    const stream = await this.fetchUrl(url) ;\n    const imageUrl = await this.saveBySteam(stream, filename);\n\n    return imageUrl;\n  }\n}\n","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"axios\");","module.exports = require(\"path\");","import { IsString, IsUrl } from 'class-validator';\n\nexport class CreateImageDto {\n  @IsUrl()\n  url: string;\n}\n\nexport class GetImageParamsDto {\n  @IsString()\n  path: string;\n}","module.exports = require(\"class-validator\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { ConfigService } from '@nestjs/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const port = 4000;\n  const prefix = 'images';\n\n  const configService = app.get(ConfigService);\n  const origin = configService.getOrThrow('DOMAIN');\n\n  app.enableCors({ origin: new RegExp(origin) });\n  app.setGlobalPrefix(prefix);\n  app.useGlobalPipes(new ValidationPipe())\n\n  await app.listen(port);\n\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${prefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}