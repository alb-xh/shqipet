{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///../../libs/common/src/index.ts","webpack:///../../libs/common/src/lib/types.ts","webpack:///../../libs/common/src/lib/helpers.ts","webpack:///external commonjs \"short-unique-id\"","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///./src/app/app.module.ts","webpack:///../../libs/config/src/index.ts","webpack:///../../libs/config/src/lib/config.module.ts","webpack:///../../libs/db/src/index.ts","webpack:///../../libs/db/src/lib/db.module.ts","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///external commonjs \"lodash\"","webpack:///../../libs/db/src/lib/dataSource.ts","webpack:///external commonjs \"dotenv\"","webpack:///external commonjs \"typeorm\"","webpack:///../../libs/db/src/lib/entities/index.ts","webpack:///../../libs/db/src/lib/entities/user.entity.ts","webpack:///./src/app/controllers/index.ts","webpack:///./src/app/controllers/users.controller.ts","webpack:///./src/app/controllers/dtos.ts","webpack:///external commonjs \"class-validator\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/config\");","export * from './lib/types';\nexport * from './lib/helpers';\n","export enum WsEvent {\n  UpdateGeoMap = 'update_geo_map',\n  CreateMessage = 'create_message',\n  BroadcastMessage = 'broadcast_message',\n  CreateRoom = 'create_room',\n  CreatedRoom = 'created_room',\n  JoinRoom = 'join_room',\n  UpdateRoom = 'update_room',\n  SendToRoom = 'send_to_room',\n  BroadcastToRoom = 'broadcast_to_room',\n};\n\nexport interface GeoInfo {\n  name?: string,\n  code?: string,\n  city?: string,\n  lat?: number,\n  lng?: number,\n};\n\nexport interface UserInfo {\n  id: string,\n  avatar?: string,\n  name: string,\n}\n\nexport interface RoomInfo {\n  id: string,\n  title: string,\n  size?: number,\n  members: UserInfo[],\n}\n\nexport interface Message {\n  user: UserInfo,\n  text: string,\n};\n\nexport interface CreateRoomMessage {\n  id: string,\n  title: string,\n  size?: number,\n}\n\nexport interface JoinRoomMessage {\n  id: string,\n  user: UserInfo,\n}\n\nexport interface SendToRoomMessage {\n  id: string,\n  state: Record<string, any>,\n};\n\nexport interface UserResponse {\n  id: number,\n  username: string,\n  firstName: string,\n  lastName: string,\n  profilePictureUrl?: string,\n  bio?: string,\n}\n\nexport interface CreateUser {\n  username: string,\n  firstName: string,\n  lastName: string,\n  password: string,\n}","import shortUniqId from 'short-unique-id';\n\nexport const randomId = (length = 10) =>  new shortUniqId({ length }).randomUUID();\n\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const isProduction = () => process.env['NODE' + '_ENV'] === 'production';\n\nexport const getEnvFile = () => isProduction() ? '.prod.env' : '.dev.env';\n","module.exports = require(\"short-unique-id\");","module.exports = require(\"@nestjs/swagger\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@shqipet/config';\nimport { DbModule } from '@shqipet/db';\nimport { UsersController } from './controllers';\n\n@Module({\n  imports: [\n    ConfigModule,\n    DbModule,\n  ],\n  controllers: [\n    UsersController,\n  ],\n})\nexport class AppModule {}\n","export * from './lib/config.module';\n","import { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as NestConfigModule } from '@nestjs/config';\nimport { getEnvFile } from '@shqipet/common';\n\n@Module({\n  imports: [ NestConfigModule.forRoot({ isGlobal: true, envFilePath: getEnvFile()  }) ],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n","export * from './lib/db.module';\nexport * from './lib/entities';\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { omit } from 'lodash';\n\nimport { options } from './dataSource';\nimport * as entitiesObj from './entities';\n\nconst entities = Object.values(entitiesObj)\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      ...omit(options, ['entities', 'migrations']),\n      entities,\n    }),\n    TypeOrmModule.forFeature(entities),\n  ],\n  exports: [ TypeOrmModule ]\n})\nexport class DbModule {}\n","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"lodash\");","import * as dotenv from 'dotenv';\nimport { DataSource } from 'typeorm';\n\nconst isProduction = process.env.NODE_ENV === 'production';\nconst envFile = isProduction ? '.prod.env' : '.dev.env';\nconst entitiesPath = isProduction ? 'dist/libs/db/src/lib/entities/*.entity.js' : 'libs/db/src/lib/entities/*.entity.ts';\nconst migrationsPath = isProduction ? 'dist/libs/db/src/lib/migrations/*.js' : 'libs/db/src/lib/migrations/*.ts';\n\ndotenv.config({ path: envFile });\n\nexport const options = {\n  type: process.env.DB_TYPE as any,\n  host: process.env.DB_HOST,\n  port: parseInt(process.env.DB_PORT as string, 10),\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  entities: [ entitiesPath ],\n  migrations: [ migrationsPath ],\n  migrationsTableName: \"migrations\",\n  synchronize: false,\n}\n\nexport default new DataSource(options);","module.exports = require(\"dotenv\");","module.exports = require(\"typeorm\");","export * from './user.entity';","import { Column, CreateDateColumn, Entity, Index, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true, length: 32 })\n  @Index({ unique: true })\n  username: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ nullable: true })\n  profilePictureUrl?: string;\n\n  @Column({ length: 150, nullable: true })\n  bio?: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  resetPasswordCode: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updateAt: Date;\n}","export * from './users.controller';\n","import { Body, Controller, ForbiddenException, Get, NotFoundException, Param, Post } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { User } from \"@shqipet/db\";\nimport { Repository } from \"typeorm\";\nimport { CreateUserDto } from \"./dtos\";\nimport { UserResponse } from \"@shqipet/common\";\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository<User>,\n  ) {}\n\n  @Get(':username')\n  async getUserByUsername(@Param('username') username: string): Promise<UserResponse> {\n    const user = await this.userRepository.findOneBy({ username });\n    if (!user) {\n      throw new NotFoundException();\n    }\n\n    return {\n      id: user.id,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      profilePictureUrl: user.profilePictureUrl,\n      bio: user.bio,\n    }\n  }\n\n  @Post()\n  async createUser(@Body() createUserDto: CreateUserDto): Promise<void> {\n    if (await this.userRepository.exist({ where: { username: createUserDto.username } })) {\n      throw new ForbiddenException('User already exists');\n    }\n\n    const user = this.userRepository.create(createUserDto);\n    await this.userRepository.save(user);\n  }\n}","import { IsString, Length } from 'class-validator';\nimport { CreateUser } from \"@shqipet/common\";\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto implements CreateUser {\n  @IsString()\n  @Length(4, 50)\n  @ApiProperty()\n  username: string;\n\n  @IsString()\n  @Length(2, 50)\n  @ApiProperty()\n  firstName: string;\n\n  @IsString()\n  @Length(2, 50)\n  @ApiProperty()\n  lastName: string;\n\n  @IsString()\n  @Length(8, 32)\n  @ApiProperty()\n  password: string;\n}\n","module.exports = require(\"class-validator\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport cookieParser from 'cookie-parser';\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigService } from '@nestjs/config';\nimport { isProduction } from '@shqipet/common';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const configService = app.get(ConfigService);\n  const port = configService.getOrThrow('PORT');\n  const prefix = configService.getOrThrow('PREFIX');\n  const origin = configService.getOrThrow('DOMAIN');\n\n  app.enableCors({ credentials: true, origin: new RegExp(origin) });\n  app.use(cookieParser());\n  app.setGlobalPrefix(prefix);\n  app.useGlobalPipes(new ValidationPipe())\n\n  if (!isProduction()) {\n    const config = new DocumentBuilder()\n    .setTitle('Shqipet')\n    .setDescription(`The shqipet API description`)\n    .setVersion('1.0')\n    .addTag('shqipet')\n    .build();\n\n    const document = SwaggerModule.createDocument(app, config);\n    SwaggerModule.setup(prefix, app, document);\n  }\n\n  await app.listen(port);\n\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${prefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}