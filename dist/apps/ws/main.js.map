{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///../../libs/config/src/index.ts","webpack:///../../libs/config/src/lib/config.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///../../libs/common/src/index.ts","webpack:///../../libs/common/src/lib/types.ts","webpack:///../../libs/common/src/lib/helpers.ts","webpack:///external commonjs \"short-unique-id\"","webpack:///../../libs/geo/src/index.ts","webpack:///../../libs/geo/src/lib/geo.module.ts","webpack:///../../libs/geo/src/lib/geo.service.ts","webpack:///external node-commonjs \"path\"","webpack:///external node-commonjs \"fs\"","webpack:///external commonjs \"@maxmind/geoip2-node\"","webpack:///../../libs/cache/src/index.ts","webpack:///../../libs/cache/src/lib/cache.module.ts","webpack:///../../libs/cache/src/lib/services/index.ts","webpack:///../../libs/cache/src/lib/services/in-memory-cache.service.ts","webpack:///../../libs/cache/src/lib/constants.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/components/message-formatter.ts","webpack:///external commonjs \"dompurify\"","webpack:///external commonjs \"jsdom\"","webpack:///external commonjs \"marked\"","webpack:///./src/app/components/auth-manager.ts","webpack:///external commonjs \"cookie\"","webpack:///./src/app/components/ip-extractor.ts","webpack:///./src/app/components/cors-manager.ts","webpack:///./src/app/handlers/index.ts","webpack:///./src/app/handlers/geo/index.ts","webpack:///./src/app/handlers/geo/handler.ts","webpack:///./src/app/handlers/geo/map.ts","webpack:///./src/app/handlers/room/index.ts","webpack:///./src/app/handlers/room/handler.ts","webpack:///./src/app/handlers/room/map.ts","webpack:///./src/app/handlers/room/room.ts","webpack:///./src/app/handlers/messages.ts","webpack:///./src/app/ws.gateway.ts","webpack:///external commonjs \"@nestjs/websockets\"","webpack:///external commonjs \"socket.io\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@shqipet/config';\nimport { GeoModule } from '@shqipet/geo';\nimport { CacheModule } from '@shqipet/cache';\nimport { ConfigService } from '@nestjs/config';\n\nimport { AuthManager, IpExtractor, CorsManager, MessageFormatter } from './components';\nimport { GeoMap, GeoHandler, RoomMap, RoomHandler, MessagesHandler } from './handlers';\nimport { WsGateway } from './ws.gateway';\n\n@Module({\n  imports: [\n    ConfigModule,\n    GeoModule,\n    CacheModule,\n  ],\n  providers: [\n    {\n      provide: AuthManager,\n      useFactory: (configService) => {\n        const cookieName = configService.getOrThrow('COOKIE');\n        return new AuthManager(cookieName);\n      },\n      inject: [ ConfigService ],\n    },\n    {\n      provide: IpExtractor,\n      useFactory: (configService) => {\n        const domain = configService.getOrThrow('DOMAIN');\n        return new IpExtractor(domain);\n      },\n      inject: [ ConfigService ],\n    },\n    {\n      provide: CorsManager,\n      useFactory: (configService) => {\n        const domain = configService.getOrThrow('DOMAIN');\n        return new CorsManager(domain);\n      },\n      inject: [ ConfigService ],\n    },\n    MessageFormatter,\n    GeoMap,\n    GeoHandler,\n    RoomMap,\n    RoomHandler,\n    MessagesHandler,\n    WsGateway,\n  ],\n})\nexport class AppModule {}\n","module.exports = require(\"@nestjs/common\");","export * from './lib/config.module';\n","import { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as NestConfigModule } from '@nestjs/config';\nimport { getEnvFile } from '@shqipet/common';\n\n@Module({\n  imports: [ NestConfigModule.forRoot({ isGlobal: true, envFilePath: getEnvFile()  }) ],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n","module.exports = require(\"@nestjs/config\");","export * from './lib/types';\nexport * from './lib/helpers';\n","export enum WsEvent {\n  UpdateGeoMap = 'update_geo_map',\n  CreateMessage = 'create_message',\n  BroadcastMessage = 'broadcast_message',\n  CreateRoom = 'create_room',\n  CreatedRoom = 'created_room',\n  JoinRoom = 'join_room',\n  UpdateRoom = 'update_room',\n  SendToRoom = 'send_to_room',\n  BroadcastToRoom = 'broadcast_to_room',\n};\n\nexport interface GeoInfo {\n  name?: string,\n  code?: string,\n  city?: string,\n  lat?: number,\n  lng?: number,\n};\n\nexport interface UserInfo {\n  id: string,\n  avatar?: string,\n  name: string,\n}\n\nexport interface RoomInfo {\n  id: string,\n  title: string,\n  size?: number,\n  members: UserInfo[],\n}\n\nexport interface Message {\n  user: UserInfo,\n  text: string,\n};\n\nexport interface CreateRoomMessage {\n  id: string,\n  title: string,\n  size?: number,\n}\n\nexport interface JoinRoomMessage {\n  id: string,\n  user: UserInfo,\n}\n\nexport interface SendToRoomMessage {\n  id: string,\n  state: Record<string, any>,\n};\n\nexport interface PublicUser {\n  id: number,\n  username: string,\n  firstName: string,\n  lastName: string,\n  profilePictureUrl?: string,\n  bio?: string,\n}\n\nexport interface CreateUserResponse extends PublicUser {\n  resetPasswordCode: string,\n}\n\nexport interface CreateUser {\n  username: string,\n  firstName: string,\n  lastName: string,\n  password: string,\n}\n\nexport interface UserSignIn {\n  password: string,\n}\n\nexport interface ChangePassword {\n  oldPassword: string,\n  newPassword: string,\n}\n","import shortUniqId from 'short-unique-id';\n\nexport const randomId = (length = 10) =>  new shortUniqId({ length }).randomUUID();\n\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const isProduction = () => process.env['NODE' + '_ENV'] === 'production';\n\nexport const getEnvFile = () => isProduction() ? '.prod.env' : '.dev.env';\n","module.exports = require(\"short-unique-id\");","export * from './lib/geo.module';\nexport * from './lib/geo.service';\n","import { Module } from '@nestjs/common';\nimport { GeoService } from './geo.service';\n\n@Module({\n  providers: [ GeoService ],\n  exports: [ GeoService ],\n})\nexport class GeoModule {}\n","import { join } from 'path';\nimport { readFileSync } from 'fs';\nimport { GeoInfo } from '@shqipet/common';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Reader as ReaderNode, ReaderModel } from '@maxmind/geoip2-node';\n\n@Injectable()\nexport class GeoService {\n  private reader: ReaderModel;\n\n  constructor (configService: ConfigService) {\n    const path = configService.getOrThrow('GEO_DB_PATH');\n    const fullPath = join(process.cwd(), path);\n    const file = readFileSync(fullPath);\n\n    this.reader = ReaderNode.openBuffer(file);\n  }\n\n  getInfo (ip: string): GeoInfo {\n    const {\n      country,\n      city,\n      location,\n    } = this.reader.city(ip);\n\n    return {\n      name: country?.names?.en,\n      code: country?.isoCode,\n      city: city?.names?.en,\n      lat: location?.latitude,\n      lng: location?.longitude,\n    }\n  }\n}\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"@maxmind/geoip2-node\");","export * from './lib/cache.module';\nexport * from './lib/services';\n","import { Module } from '@nestjs/common';\n\nimport { InMemoryCacheService } from './services';\n\n@Module({\n  providers: [ InMemoryCacheService ],\n  exports: [ InMemoryCacheService ],\n})\nexport class CacheModule {}\n","export * from './in-memory-cache.service';\n","import { Injectable } from \"@nestjs/common\";\n\nimport { CacheOptions, CacheService, InMemoryCacheEntry } from \"../types\";\nimport { DEFAULT_TTL } from \"../constants\";\n\n@Injectable()\nexport class InMemoryCacheService implements CacheService {\n  private readonly map = new Map<string, InMemoryCacheEntry>();\n\n  private readonly interval = setInterval(() => {\n    for (const [key, value] of this.map.entries()) {\n      if (this.isExpired(value)) {\n        this.map.delete(key);\n      }\n    }\n  }, 1000 * 60);\n\n  private isExpired (entry: InMemoryCacheEntry): boolean {\n    const { ttl ,createAt } = entry;\n\n    return Date.now() > createAt + ttl;\n  }\n\n  async set<T>(key: string, value: T, options?: CacheOptions): Promise<void> {\n    const { ttl = DEFAULT_TTL } = options || {};\n\n    this.map.set(key, {\n      createAt: Date.now(),\n      value,\n      ttl,\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.map.has(key) && !this.isExpired(this.map.get(key) as any);\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    if (!await this.has(key)) {\n      return null;\n    }\n\n    const { value } = this.map.get(key) as any;\n\n    return value;\n  }\n\n  async remove (key: string): Promise<void> {\n    if (!await this.has(key)) {\n      return;\n    }\n\n    this.map.delete(key);\n  }\n\n  getAll<T>(prefix: string): Promise<T[]> {\n    const result: T[] = [];\n\n    for (const [key, entry] of this.map.entries()) {\n      if (key.startsWith(prefix) && !this.isExpired(entry)) {\n        result.push(entry.value);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n}","export const DEFAULT_TTL = 1000 * 60 * 60;\n","export * from './message-formatter';\nexport * from './auth-manager';\nexport * from './ip-extractor';\nexport * from './cors-manager';\n","import DOMPurify from 'dompurify';\nimport { JSDOM } from 'jsdom';\nimport { marked } from 'marked';\n\nconst window = new JSDOM('').window;\nconst { sanitize } = DOMPurify(window);\n\nexport class MessageFormatter {\n  format (text: string): string {\n    return marked.parseInline(sanitize(text), {\n      headerIds: false,\n      mangle: false,\n      highlight: null,\n      langPrefix: null,\n    });\n  }\n}\n","module.exports = require(\"dompurify\");","module.exports = require(\"jsdom\");","module.exports = require(\"marked\");","import cookie from 'cookie';\n\nimport { Socket } from \"socket.io\";\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthManager {\n  private readonly authenticatedClientIds = new Set<string>();\n\n  constructor(\n    private readonly cookieName: string,\n  ) {}\n\n  async isAuthenticated (client: Socket): Promise<boolean> {\n    if (this.authenticatedClientIds.has(client.id)) {\n      return true;\n    }\n\n    const token = cookie.parse(client.handshake.headers.cookie)[this.cookieName];\n\n    // TODO: Validate token\n    return !!token;\n  }\n}","module.exports = require(\"cookie\");","import { Injectable } from \"@nestjs/common\";\nimport { Socket } from \"socket.io\";\n\n@Injectable()\nexport class IpExtractor {\n  private readonly devIp = '91.82.156.27';\n\n  constructor (\n    private readonly domain: string,\n\n  ) {}\n\n  extract (client: Socket): string {\n    return this.domain !== 'localhost'\n    ? client.handshake.headers['x-real-ip'] as string || client.handshake.address\n    : this.devIp;\n  }\n}\n","import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class CorsManager {\n  constructor(private readonly domain: string) {}\n\n  apply (cors: object) {\n    cors['credentials'] = true;\n    cors['origin'] = new RegExp(this.domain);\n  }\n};\n","export * from './geo';\nexport * from './room';\nexport * from './messages';\n","export * from './handler';\nexport * from './map';\n","import { Injectable } from \"@nestjs/common\";\nimport { WsEvent } from \"@shqipet/common\";\nimport { Server, Socket } from \"socket.io\";\nimport { GeoService } from \"@shqipet/geo\";\n\nimport { IpExtractor } from \"../../components\";\nimport { GeoMap } from \"./map\";\n\n@Injectable()\nexport class GeoHandler {\n  constructor(\n    private readonly IpExtractor: IpExtractor,\n    private readonly geoService: GeoService,\n    private readonly geoMap: GeoMap,\n  ) {}\n\n  private sendUpdatedMap (server: Server) {\n    server.emit(\n      WsEvent.UpdateGeoMap,\n      Array.from(\n        this.geoMap\n          .getAll()\n          .values()\n      ),\n    );\n  }\n\n  handleConnection (server: Server, client: Socket) {\n    const ip = this.IpExtractor.extract(client);\n    if (!ip) {\n      return;\n    }\n\n    this.geoMap.set(client.id, this.geoService.getInfo(ip))\n\n    this.sendUpdatedMap(server);\n  }\n\n  async handleDisconnect(server: Server, client: Socket) {\n    if (!this.geoMap.exists(client.id)) {\n      return;\n    }\n\n    this.geoMap.remove(client.id);\n\n    this.sendUpdatedMap(server);\n  }\n}","import { Injectable } from \"@nestjs/common\";\nimport { GeoInfo } from \"@shqipet/common\";\n\nInjectable()\nexport class GeoMap {\n  private readonly geoMap = new Map<string, GeoInfo>();\n\n  exists (id: string): boolean {\n    return this.geoMap.has(id);\n  }\n\n  get (id: string): GeoInfo | null {\n    if (!this.exists(id)) {\n      return null;\n    }\n\n    return this.geoMap.get(id);\n  }\n\n  getAll (): Map<string, GeoInfo> {\n    return this.geoMap;\n  }\n\n  set (id: string, data: GeoInfo): this {\n    this.geoMap.set(id, data);\n\n    return this;\n  }\n\n  remove (id: string): this {\n    if (this.exists(id)) {\n      this.geoMap.delete(id);\n    }\n\n    return this;\n  }\n}\n","export * from './handler';\nexport * from './map';\n","import { Injectable } from \"@nestjs/common\";\nimport { CreateRoomMessage, JoinRoomMessage, SendToRoomMessage, WsEvent } from \"@shqipet/common\";\nimport { Server, Socket } from \"socket.io\";\n\nimport { AuthManager } from \"../../components\";\nimport { RoomMap } from \"./map\";\nimport { Room } from \"./room\";\n\n@Injectable()\nexport class RoomHandler {\n  constructor(\n    private readonly authManager: AuthManager,\n    private readonly roomMap: RoomMap,\n  ) {}\n\n  async handleDisconnect (server: Server, client: Socket) {\n    for (const room of await this.roomMap.getAll()) {\n      for (const clientId of room.members.keys()) {\n\n        if (clientId === client.id) {\n          room.removeMember(clientId);\n\n          server.to(room.id)\n            .emit(WsEvent.UpdateRoom, room.getInfo());\n        }\n      }\n    }\n  }\n\n  async handleCreateRoom(\n    server: Server,\n    client: Socket,\n    { id, title, size }: CreateRoomMessage,\n  ) {\n    if (!(await this.authManager.isAuthenticated(client))) {\n      return;\n    }\n\n    this.roomMap.set(new Room(id, title, size));\n  }\n\n  async handleJoinRoom(\n    server: Server,\n    client: Socket,\n   { id, user }: JoinRoomMessage ,\n  ) {\n    if (!(await this.authManager.isAuthenticated(client))) {\n      return;\n    }\n\n    const room = await this.roomMap.get(id);\n\n    if (!room || room.hasMember(client.id)) {\n      return;\n    }\n\n    room.setMember(client.id, user);\n\n    for (const id of room.members.keys()) {\n      server.to(id)\n        .emit(WsEvent.UpdateRoom, room.getInfo());\n    }\n  }\n\n  async handleSendToRoom(\n    server: Server,\n    client: Socket,\n    { id, state }: SendToRoomMessage,\n  ) {\n    if (!(await this.authManager.isAuthenticated(client))) {\n      return;\n    }\n\n    const room = await this.roomMap.get(id);\n\n    if (!room || !room.hasMember(client.id)) {\n      return;\n    }\n\n    for (const id of room.members.keys()) {\n      server.to(id)\n        .emit(WsEvent.BroadcastToRoom, state);\n    }\n  }\n}","import { Injectable, Inject } from \"@nestjs/common\";\nimport { InMemoryCacheService } from \"@shqipet/cache\";\n\nimport { Room } from \"./room\";\n\nInjectable()\nexport class RoomMap {\n  private readonly prefix = 'room:';\n  private readonly ttl = 1000 * 60 * 60;\n\n  constructor (\n    @Inject(InMemoryCacheService)\n    private readonly cache: InMemoryCacheService,\n  ) {}\n\n  private idToKey (id: string): string {\n    return `${this.prefix}${id}`;\n  }\n\n  exists (id: string): Promise<boolean> {\n    return this.cache.has(this.idToKey(id));\n  }\n\n  get (id: string): Promise<Room | null> {\n    return this.cache.get(this.idToKey(id));\n  }\n\n  getAll (): Promise<Room[]> {\n    return this.cache.getAll(this.prefix);\n  }\n\n  async set (room: Room): Promise<this> {\n    await this.cache.set(this.idToKey(room.id), room, { ttl: this.ttl });\n\n    return this;\n  }\n\n  async remove (id: string): Promise<this> {\n    await this.cache.remove(this.idToKey(id));\n\n    return this;\n  }\n}\n","import { RoomInfo, UserInfo } from \"@shqipet/common\";\n\nexport class Room {\n  readonly members = new Map<string, UserInfo>();\n\n  constructor (\n    readonly id: string,\n    readonly title: string,\n    readonly size?: number\n  ) {}\n\n  hasMember (id: string): boolean {\n    return this.members.has(id);\n  }\n\n  getMember (id: string): UserInfo | null {\n    return this.hasMember(id)\n      ? this.members.get(id)\n      : null;\n  }\n\n  setMember (id: string, user: UserInfo): this {\n    this.members.set(id, user);\n    return this;\n  }\n\n  removeMember (id: string): this {\n    if (this.hasMember(id)) {\n      this.members.delete(id);\n    }\n\n    return this;\n  }\n\n  getInfo (): RoomInfo {\n    return {\n      id: this.id,\n      title: this.title,\n      size: this.size,\n      members: Array.from(this.members.values()),\n    };\n  }\n}","import { Injectable } from \"@nestjs/common\";\nimport { WsEvent, Message } from \"@shqipet/common\";\nimport { Server, Socket } from \"socket.io\";\n\nimport { AuthManager, MessageFormatter } from \"../components\";\n\n@Injectable()\nexport class MessagesHandler {\n  constructor(\n    private readonly authManager: AuthManager,\n    private readonly messageFormatter: MessageFormatter,\n  ) {}\n\n  async handleCreateMessage (\n    server: Server,\n    client: Socket,\n    { user, text }: Message,\n  ) {\n    if (!(await this.authManager.isAuthenticated(client))) {\n      return;\n    }\n\n    const formattedText = this.messageFormatter.format(text);\n    if (!formattedText) {\n      return;\n    }\n\n    server.emit(WsEvent.BroadcastMessage, { user, text: formattedText });\n  }\n}\n","import {\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  SubscribeMessage,\n  MessageBody,\n  ConnectedSocket,\n} from '@nestjs/websockets';\nimport {\n  WsEvent,\n  CreateRoomMessage,\n  JoinRoomMessage,\n  Message,\n  SendToRoomMessage,\n} from '@shqipet/common';\nimport { Server, Socket } from 'socket.io';\n\nimport { CorsManager } from './components';\nimport { GeoHandler, RoomHandler, MessagesHandler } from './handlers';\n\n// We need the reference\nconst cors = {};\n\n@WebSocketGateway({ path: '/ws', cors })\nexport class WsGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  @WebSocketServer() server: Server;\n\n  constructor (\n    private readonly geoHandler: GeoHandler,\n    private readonly roomHandler: RoomHandler,\n    private readonly messageHandler: MessagesHandler,\n    corsManager: CorsManager,\n  ) {\n    corsManager.apply(cors);\n  }\n\n  async handleConnection (client: Socket) {\n    this.geoHandler.handleConnection(this.server, client);\n  }\n\n  async handleDisconnect(client: Socket) {\n    await Promise.all([\n      this.geoHandler.handleDisconnect(this.server, client).catch(console.error),\n      this.roomHandler.handleDisconnect(this.server, client).catch(console.error),\n    ]);\n  }\n\n  @SubscribeMessage(WsEvent.CreateMessage)\n  async handleCreateMessage(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() message: Message,\n  ) {\n    await this.messageHandler.handleCreateMessage(this.server, client, message);\n  }\n\n  @SubscribeMessage(WsEvent.CreateRoom)\n  async handleCreateRoom(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() message: CreateRoomMessage,\n  ) {\n    await this.roomHandler.handleCreateRoom(this.server, client, message);\n  }\n\n  @SubscribeMessage(WsEvent.JoinRoom)\n  async handleJoinRoom(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() message: JoinRoomMessage,\n  ) {\n    await this.roomHandler.handleJoinRoom(this.server, client, message);\n  }\n\n  @SubscribeMessage(WsEvent.SendToRoom)\n  async handleSendToRoom(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() message: SendToRoomMessage,\n  ) {\n    await this.roomHandler.handleSendToRoom(this.server, client, message);\n  }\n}","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"socket.io\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\nimport { Logger } from '@nestjs/common';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(5000);\n\n  Logger.log(`🚀 Application is running on: http://localhost:5000/ws`);\n}\n\nbootstrap();"],"names":[],"sourceRoot":""}