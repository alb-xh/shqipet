{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/me/index.ts","webpack:///./src/app/me/google-token-manager.service.ts","webpack:///external commonjs \"axios\"","webpack:///external commonjs \"google-auth-library\"","webpack:///./src/app/me/controller.ts","webpack:///external commonjs \"express\"","webpack:///./src/app/me/dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { MeController, GoogleTokenManagerService } from './me';\n\nconst envFilePath = process.env['NODE' + '_ENV'] === 'production' ? '.prod.env' : '.dev.env';\n\n@Module({\n  imports: [ ConfigModule.forRoot({ envFilePath }) ],\n  controllers: [ MeController ],\n  providers: [ GoogleTokenManagerService],\n})\nexport class AppModule {}\n","module.exports = require(\"@nestjs/config\");","export { GoogleTokenManagerService } from './google-token-manager.service';\nexport { MeController } from './controller';","\nimport axios from \"axios\";\nimport { ForbiddenException, Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { OAuth2Client } from 'google-auth-library';\n\nexport interface UserInfo {\n  avatar?: string,\n  name: string,\n}\n\n@Injectable()\nexport class GoogleTokenManagerService {\n  private readonly clientId: string;\n  private readonly oAuthClient: OAuth2Client;\n  constructor (configService: ConfigService) {\n    const clientId = configService.getOrThrow('GOOGLE_CLIENT_ID');\n\n    this.clientId = clientId;\n    this.oAuthClient = new OAuth2Client(clientId);\n  }\n\n  async getUserInfo (token: string): Promise<UserInfo> {\n    const ticket = await this.oAuthClient.verifyIdToken({\n      idToken: token,\n      audience: this.clientId\n    });\n\n    const { picture, name, given_name, family_name } = ticket.getPayload();\n\n    const userName = name || [ given_name, family_name ].join(' ');\n    if (!userName) {\n      throw new ForbiddenException('User must have a name!');\n    }\n\n    let avatar: string;\n    if (picture) {\n      const { data } = await axios.get(picture, { responseType: 'arraybuffer' });\n      avatar = Buffer.from(data, 'binary')\n        .toString('base64');\n    }\n\n    return {\n      name: userName,\n      avatar,\n    };\n  }\n}\n","module.exports = require(\"axios\");","module.exports = require(\"google-auth-library\");","import { Body, Controller, Delete, ForbiddenException, Get, Post, Req, Res } from '@nestjs/common';\nimport { Response, Request, CookieOptions} from 'express'\nimport { ConfigService } from '@nestjs/config';\n\nimport { CreateMeDto } from './dto';\nimport { GoogleTokenManagerService } from './google-token-manager.service';\n\n@Controller('/me')\nexport class MeController {\n  private readonly cookieName = 'me';\n  private readonly cookieOptions: CookieOptions = {\n    path: '/users',\n    httpOnly: true,\n    sameSite: true,\n  }\n\n  constructor(\n    private readonly googleTokenManagerService: GoogleTokenManagerService,\n    configService: ConfigService,\n  ) {\n    const domain = configService.getOrThrow('DOMAIN')\n\n    this.cookieOptions.domain = domain;\n    this.cookieOptions.secure = domain !== 'localhost';\n  }\n\n  @Get()\n  getMe (@Req() req: Request) {\n    const cookie = req.cookies[this.cookieName];\n\n    if (!cookie) {\n      throw new ForbiddenException();\n    }\n\n    return this.googleTokenManagerService.getUserInfo(cookie);\n  }\n\n  @Post()\n  async createMe (@Body() body: CreateMeDto, @Res() res: Response): Promise<void> {\n    const userInfo = await this.googleTokenManagerService.getUserInfo(body.token);\n\n    res\n      .cookie(this.cookieName, body.token, this.cookieOptions)\n      .send(userInfo);\n  }\n\n  @Delete()\n  removeMe (@Res() res: Response): void {\n    res\n      .clearCookie(this.cookieName, this.cookieOptions)\n      .send({ ok: true })\n  }\n}\n","module.exports = require(\"express\");","import { IsJWT } from 'class-validator';\n\nexport class CreateMeDto {\n  @IsJWT()\n  token: string;\n};\n","module.exports = require(\"class-validator\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport cookieParser from 'cookie-parser';\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { ConfigService } from '@nestjs/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const port = 3000;\n  const prefix = 'users';\n\n  const configService = app.get(ConfigService);\n  const origin = configService.getOrThrow('DOMAIN');\n\n  app.enableCors({ credentials: true, origin: new RegExp(origin) });\n  app.use(cookieParser());\n  app.setGlobalPrefix(prefix);\n  app.useGlobalPipes(new ValidationPipe())\n\n  await app.listen(port);\n\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${prefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}