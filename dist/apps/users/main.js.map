{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///../../libs/config/src/index.ts","webpack:///../../libs/config/src/lib/config.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/me/index.ts","webpack:///./src/app/me/google-token-manager.service.ts","webpack:///external commonjs \"google-auth-library\"","webpack:///./src/app/me/controller.ts","webpack:///external commonjs \"express\"","webpack:///./src/app/me/service.ts","webpack:///../../libs/storage/src/index.ts","webpack:///../../libs/storage/src/lib/storage.module.ts","webpack:///../../libs/storage/src/lib/images-storage.service.ts","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"fs/promises\"","webpack:///external commonjs \"axios\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@shqipet/config';\n\nimport { MeController, GoogleTokenManagerService, UsersService } from './me';\nimport { StorageModule } from '@shqipet/storage';\n\n@Module({\n  imports: [ ConfigModule, StorageModule ],\n  controllers: [ MeController ],\n  providers: [ GoogleTokenManagerService, UsersService ],\n})\nexport class AppModule {}\n","export * from './lib/config.module';\n","import { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as NestConfigModule } from '@nestjs/config';\n\nconst envFilePath = process.env['NODE' + '_ENV'] === 'production' ? '.prod.env' : '.dev.env';\n\n@Module({\n  imports: [ NestConfigModule.forRoot({ isGlobal: true, envFilePath  }) ],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n","module.exports = require(\"@nestjs/config\");","export { GoogleTokenManagerService } from './google-token-manager.service';\nexport { MeController } from './controller';\nexport { UsersService } from './service';\n","\nimport { ForbiddenException, Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { OAuth2Client } from 'google-auth-library';\n\nexport interface UserInfo {\n  avatar?: string,\n  name: string,\n}\n\n@Injectable()\nexport class GoogleTokenManagerService {\n  private readonly clientId: string;\n  private readonly oAuthClient: OAuth2Client;\n  constructor (configService: ConfigService) {\n    const clientId = configService.getOrThrow('GOOGLE_CLIENT_ID');\n\n    this.clientId = clientId;\n    this.oAuthClient = new OAuth2Client(clientId);\n  }\n\n  async getUserInfo (token: string): Promise<UserInfo> {\n    const ticket = await this.oAuthClient.verifyIdToken({\n      idToken: token,\n      audience: this.clientId\n    });\n\n    const { picture, name, given_name, family_name } = ticket.getPayload();\n\n    const userName = name || [ given_name, family_name ].join(' ');\n    if (!userName) {\n      throw new ForbiddenException('User must have a name!');\n    }\n\n    return {\n      name: userName,\n      avatar: picture,\n    };\n  }\n}\n","module.exports = require(\"google-auth-library\");","import { Response, Request, CookieOptions} from 'express';\nimport { Body, Controller, Delete, ForbiddenException, Get, Post, Req, Res } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { UsersService } from './service';\n\n@Controller('/me')\nexport class MeController {\n  private readonly domain: string;\n  private readonly cookieName = 'me';\n  private readonly cookieOptions: CookieOptions = {\n    path: '/users',\n    httpOnly: true,\n    sameSite: true,\n  }\n\n  constructor(\n    private readonly usersService: UsersService,\n    configService: ConfigService,\n  ) {\n    const domain = configService.getOrThrow('DOMAIN')\n\n    this.domain = domain;\n    this.cookieOptions.domain = domain;\n    this.cookieOptions.secure = domain !== 'localhost';\n  }\n\n  @Get()\n  getMe (@Req() req: Request) {\n    const cookie = req.cookies[this.cookieName];\n\n    if (!cookie) {\n      throw new ForbiddenException();\n    }\n\n    return this.usersService.getUser(cookie);\n  }\n\n  @Post()\n  async createMe (@Body('token') token: string, @Res() res: Response): Promise<void> {\n    if (!token) {\n      throw new ForbiddenException();\n    }\n\n    const meData = await this.usersService.getUser(token);\n\n    res\n      .cookie(this.cookieName, token, this.cookieOptions)\n      .send(meData);\n  }\n\n  @Delete()\n  removeMe (@Res() res: Response): void {\n    res\n      .clearCookie(this.cookieName, this.cookieOptions)\n      .send({ ok: true })\n  }\n}\n","module.exports = require(\"express\");","import { Injectable } from \"@nestjs/common\";\nimport { ImagesStorageService } from \"@shqipet/storage\";\n\nimport { GoogleTokenManagerService, UserInfo } from \"./google-token-manager.service\";\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly googleTokenManagerService: GoogleTokenManagerService,\n    private readonly imagesStorageService: ImagesStorageService,\n  ) {}\n\n  async getUser (token: string): Promise<UserInfo> {\n    const { name, avatar } = await this.googleTokenManagerService.getUserInfo(token);\n\n    const ourAvatar = avatar\n      ? await this.imagesStorageService.saveByUrl(avatar)\n      : null;\n\n    return {\n      avatar: ourAvatar,\n      name,\n    };\n  }\n};\n","export * from './lib/storage.module';\nexport * from './lib/images-storage.service';\n","import { Module } from '@nestjs/common';\nimport { ImagesStorageService } from './images-storage.service';\n\n@Module({\n  controllers: [],\n  providers: [ImagesStorageService],\n  exports: [ImagesStorageService],\n})\nexport class StorageModule {}\n","import * as fs from 'fs';\nimport { access } from 'fs/promises';\nimport axios from 'axios';\nimport { join } from 'path';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ImagesStorageService {\n  private readonly imagesDir: string;\n  private readonly domain: string;\n  private readonly extension = 'png';\n\n  constructor (configService: ConfigService) {\n    this.domain = configService.getOrThrow('DOMAIN');\n\n    const dir = configService.getOrThrow('IMAGES_DIR');\n    this.imagesDir = join(process.cwd(), dir);\n  }\n\n  async exists (path: string): Promise<boolean> {\n    try {\n      await access(path);\n\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private getPath (name: string): string {\n    return join(this.imagesDir, name);\n  }\n\n  private getExternalUrlName (url: string): string {\n    const identifier = new URL(url).pathname.replace(/\\//g, '__');\n\n    return `${identifier}.${this.extension}`;\n  }\n\n  async readByName (name: string): Promise<fs.ReadStream> {\n    const path = this.getPath(name);\n\n    const exists = await this.exists(path);\n    if (!exists) {\n      throw new NotFoundException();\n    }\n\n    return fs.createReadStream(path);\n  }\n\n  private getImageUrl (name: string): string {\n    return this.domain !== 'localhost'\n      ? `https://${this.domain}/images/${name}`\n      : `http://localhost:4000/images/${name}`;\n  }\n\n  async fetchUrl (url: string): Promise<fs.ReadStream> {\n    const { data } = await axios.get(url, { responseType: 'stream' });\n    return data;\n  }\n\n  async saveBySteam (stream: fs.ReadStream, name: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const path = this.getPath(name);\n      const url = this.getImageUrl(name);\n\n      const writeStream = fs.createWriteStream(path);\n\n      stream.pipe(writeStream)\n        .on('error', reject)\n        .on('finish', () => resolve(url));\n    });\n  }\n\n  async saveByUrl (url: string, name?: string): Promise<string> {\n    const filename = name || this.getExternalUrlName(url);\n\n    const stream = await this.fetchUrl(url) ;\n    const imageUrl = await this.saveBySteam(stream, filename);\n\n    return imageUrl;\n  }\n}\n","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"axios\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport cookieParser from 'cookie-parser';\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { ConfigService } from '@nestjs/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const port = 3000;\n  const prefix = 'users';\n\n  const configService = app.get(ConfigService);\n  const origin = configService.getOrThrow('DOMAIN');\n\n  app.enableCors({ credentials: true, origin: new RegExp(origin) });\n  app.use(cookieParser());\n  app.setGlobalPrefix(prefix);\n  app.useGlobalPipes(new ValidationPipe())\n\n  await app.listen(port);\n\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${prefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}